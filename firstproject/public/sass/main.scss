@import "base/base";
//no underscore and fileextension required while importing the file

/*
colors 
light green : #7ed56f
medium green: #55c57a
dark green: #28b485

 */

// intializing variables in sass
// main point of using nesting for adding concept of encapsulation
// getting started with css architecture 
// building 7-1 pattern means one main sass files and 7 sub files
// so inside sass folder a basefolder is created 
//this file will bne there for real low level basics such resets styles for html and for body element selectors
// files created inside the base folder should be one partial file
// partialfiles should alwas start with _ for ex _base.sass 
// at last all partial files are imported to main sass file using import function 
// import "file path"
// abstracts folder 
// here i am going to add code that is not going to give any css output
// for example mixins ,functions, variables which we are going to reuse code again and again
$color-primary:#55c57a;
$color-primary-dark:#28b485;
$color-orange:orange;
$color-primary-light:#7ed56f;
$color-grey-dark: #777;
$color-white:#fff;
$color-black:#000;
*,
*::after,
 ::before {
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
    /* margin: 0px;
     padding: 0px;
     box-sizing:border-box; */
}


/* 
  root font size if done in html selector 
  converting root font size values and migrating font-size from px to rem for building an better responsive pages so while building pages all the sizes are decreased simultaneously 
 */


/* '
     1 rem is equal to 10 px 
  */

html {
    /*
     here we are setting default font-size for the browser view 
     (10/16)=0.625*100=62.5%,0.625*20=12.5
     
     */
    font-size: 62.5%;
}

body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    /* padding: 30px; */
    padding: 3rem;
}

.header {
    height: 95vh;
    /* 
     above line tells us that at every point the height of this box should be 95%
     */
    background-image: linear-gradient( to right top, rgba($color-primary-light, 0.8), rgba($color-orange, 0.6)), url("../img/hero.jpg");
    background-size: cover;
    /* what cover does is it will adjust according to his height and wwidth of the hreader file  */
    -webkit-clip-path: polygon(0 0, 100% 0%, 100% 73%, 0 100%);
    clip-path: polygon(0 0, 100% 0%, 100% 73%, 0 100%);
    position: relative;
    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }
    &__logo {
        height: 3.5rem;
    }
    &__logo:hover {
        animation: moveinright .1s ease-out;
    }
    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
}

.heading-primary {
    color: #ffffff;
    text-transform: uppercase;
    backface-visibility: hidden;
    /* is used remove the default error caused during animation  */
    margin-bottom: 6rem;
    &--main {
        /* span elelment is by default an display property so its an inline elelment  so use block property*/
        display: block;
        font-size: 6rem;
        font-weight: 400;
        letter-spacing: 3.5rem;
        animation-name: moveInLeft;
        animation-duration: 3s;
        animation-timing-function: ease-out;
    }
    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700px;
        letter-spacing: 1.7rem;
        animation-name: moveinright;
        animation-duration: 3s;
        animation-timing-function: ease-out;
        /* animation-iteration-count: 3; tells how many times the animation should repeat */
    }
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    90% {
        transform: translateX(1rem);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveinright {
    0% {
        opacity: 0;
        transform: translateX(+10rem);
    }
    90% {
        transform: translateX(-2rem);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}


/* &:link, */


/* link sets ur defaut color  */


/* button part  */


/* ====================================================================== */

.btn {
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.2rem 4rem;
        display: inline-block;
        border-radius: 10rem;
        transition: all .2s;
        position: relative;
        font-size: 1.6rem;
    }
    /* btn white is only playing a major role in coloring ur elements  */
    &--white {
        background-color: #fff;
        color: #777;
    }
    /* hover works when ur mouse pointer goes above the word  */
    &:hover {
        transform: translateY(-.3rem);
        box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }
    /*
 active works  hold ur mouse on it 
 
  */
    &:active {
        transform: translateY(-.1rem);
        /* background-color: black; */
        box-shadow: 0 0.5rem 2rem rgba($color-black, 0.2); // it only works in sass specifying html color in sass 
    }
    /*  
     psuedo classes are special classes f a selector 
     where button is the one of the sudo classes which is similiar hover element
     so here link is an howver element for btn0 
     
     */
    /* after psuedo elelments  */
    &::after {
        content: "";
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    &--white::after {
        background-color: #fff;
    }
    &--animated {
        animation: moveinbutton 3s ease-out .35s;
        animation-fill-mode: backwards;
    }
}

@keyframes moveinbutton {
    0% {
        opacity: 0;
        transform: translateY(+3rem);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}


/* =========================================================================== */


/* 
 both document object model and cssom(css object model) both together form the render tree which loads the webpage finally
 */